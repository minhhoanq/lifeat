syntax = "proto3";

package catalog;

import "google/protobuf/timestamp.proto";

option go_package = "generated/catalog_service";

// Product service definition
service CatalogService {
    rpc CreateProduct(CreateProductRequest) returns (CreateProductResponse);
  }
  
  // Request message for creating a new product with SKUs
  message CreateProductRequest {
    // Product basic information
    string name = 1;
    string description = 2;
    string image = 3;
    int32 category_id = 4;
    int32 brand_id = 5;
  
    // SKUs associated with the product
    repeated SKUToCreate skus = 6;
  }
  
  // SKU creation information
  message SKUToCreate {
    string name = 1;
    string slug = 2;
    int32 original_price = 3;
    int32 initial_stock = 4;
    repeated AttributeValue attributes = 5;
  }
  
  // Attribute value pair
  message AttributeValue {
    int32 attribute_id = 1;
    string value = 2;
  }
  
  // Response message for product creation
  message CreateProductResponse {
    // Created product information
    Product product = 1;
    repeated SKU skus = 2;
  }
  
  // Product entity
  message Product {
    string id = 1;
    string name = 2;
    string description = 3;
    string image = 4;
    int32 category_id = 5;
    int32 brand_id = 6;
    google.protobuf.Timestamp created_at = 7;
    google.protobuf.Timestamp updated_at = 8;
  }
  
  // SKU entity
  message SKU {
    string id = 1;
    string product_id = 2;
    string name = 3;
    string slug = 4;
    repeated AttributeValue attributes = 5;
    Price current_price = 6;
    Inventory inventory = 7;
    google.protobuf.Timestamp created_at = 8;
    google.protobuf.Timestamp updated_at = 9;
  }
  
  // Price entity
  message Price {
    int32 id = 1;
    string sku_id = 2;
    int32 original_price = 3;
    google.protobuf.Timestamp effective_date = 4;
    bool active = 5;
  }
  
  // Inventory entity
  message Inventory {
    int32 id = 1;
    string sku_id = 2;
    int32 stock = 3;
    string reservations = 4; // JSON string representation
  }